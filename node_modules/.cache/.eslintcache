[{"/home/faique/Coalescense/react-memes-faique/src/index.js":"1","/home/faique/Coalescense/react-memes-faique/src/App.js":"2","/home/faique/Coalescense/react-memes-faique/src/Dashboard.js":"3","/home/faique/Coalescense/react-memes-faique/src/NewSearchBar.js":"4","/home/faique/Coalescense/react-memes-faique/src/Login.js":"5","/home/faique/Coalescense/react-memes-faique/src/MyTable.js":"6","/home/faique/Coalescense/react-memes-faique/src/GenMeme.js":"7","/home/faique/Coalescense/react-memes-faique/src/MyList.js":"8"},{"size":198,"mtime":1653127790769,"results":"9","hashOfConfig":"10"},{"size":961,"mtime":1653132157028,"results":"11","hashOfConfig":"10"},{"size":6370,"mtime":1653133190964,"results":"12","hashOfConfig":"10"},{"size":4959,"mtime":1652184305715,"results":"13","hashOfConfig":"10"},{"size":2090,"mtime":1653132457764,"results":"14","hashOfConfig":"10"},{"size":6695,"mtime":1653121684810,"results":"15","hashOfConfig":"10"},{"size":4321,"mtime":1653131838586,"results":"16","hashOfConfig":"10"},{"size":2075,"mtime":1653133038473,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"hnpqfk",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/faique/Coalescense/react-memes-faique/src/index.js",[],["36","37"],"/home/faique/Coalescense/react-memes-faique/src/App.js",["38","39"],"/home/faique/Coalescense/react-memes-faique/src/Dashboard.js",["40","41","42"],"/home/faique/Coalescense/react-memes-faique/src/NewSearchBar.js",["43","44","45"],"/home/faique/Coalescense/react-memes-faique/src/Login.js",["46"],"/home/faique/Coalescense/react-memes-faique/src/MyTable.js",["47","48","49","50","51","52"],"import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Route, Routes } from \"react-router\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\n\nimport { BrowserRouter, Link, Redirect, withRouter } from \"react-router-dom\";\nimport GenMeme from \"./GenMeme\";\n\nclass MyTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedList: [],\n      modal: false,\n      searchTerm: \"\",\n      currImg: \"\",\n      memeResponse: [],\n      showList: [],\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    // this.handleShowList = this.handleShowList.bind(this);\n  }\n\n  componentDidMount() {\n    const url = \"https://api.imgflip.com/get_memes\";\n    axios.get(url).then((response) => {\n      //console.log('hi', response.data.data)\n      this.setState(\n        {\n          memeResponse: response.data.data.memes.map((a) => {\n            return {\n              ...a,\n              isChecked: false,\n            };\n          }),\n        },\n        () => {\n          this.setState({\n            showList: this.state.memeResponse,\n          });\n        }\n      );\n    });\n\n    console.log(\"heheheh\");\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    // localstorage\n    console.log(\"submitted finally\", this.state.checkedList);\n    //Map over checked index and put that item information in local storage\n    var user_check = this.state.checkedList;\n\n    localStorage.setItem(\n      localStorage.getItem(\"username\"),\n      JSON.stringify(user_check)\n    );\n    this.setState({\n      checkedList: [],\n    });\n  }\n\n  handleCheck(item, e) {\n    // index and checked status\n    // append in checklist that index for re creation\n    // Added if..else check for unchecking items\n    console.log(item);\n    let currid = this.state.memeResponse.findIndex(\n      (element) => element.id === item.id\n    );\n\n    let newArray = [...this.state.memeResponse];\n    newArray[currid] = {\n      ...newArray[currid],\n      isChecked: !newArray[currid].isChecked,\n    };\n    this.setState(\n      {\n        showList: newArray,\n        // memeResponse: newArray,\n      },\n      () => {\n        this.setState({\n          memeResponse: newArray,\n        });\n      }\n    );\n\n    this.setState({\n      checkedList: [...this.state.checkedList, item],\n    });\n    if (e.target.checked) {\n      //true append id to checklist\n\n      if (this.state.checkedList.indexOf(this.state.checkedList[item]) === -1) {\n        this.setState({\n          checkedList: [...this.state.checkedList, item],\n        });\n      }\n    } else {\n      this.setState({\n        checkedList: this.state.checkedList.filter((c_item) => {\n          return c_item !== item;\n        }),\n      });\n    }\n  }\n\n  handleShowList(e) {\n    // check for local storage empty or not\n    if (!JSON.parse(localStorage.getItem(localStorage.getItem(\"username\")))) {\n      alert(\"No list to show\");\n    } else {\n      console.log();\n      this.setState({\n        showMyList: !this.state.showMyList,\n      });\n    }\n  }\n  handleSearch(e) {\n    console.log(e.target.value);\n    this.setState({\n      searchTerm: e.target.value,\n    });\n    if (this.state.searchTerm.length !== 0) {\n      let convertToLc = e.target.value.toLowerCase();\n      let filterData = this.state.memeResponse.filter((e) => {\n        let nameToLc = e.name.toLowerCase();\n        return nameToLc.indexOf(convertToLc) !== -1;\n      });\n\n      this.setState({\n        showList: filterData,\n      });\n    } else {\n      this.setState({\n        showList: this.state.memeResponse,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"table-box\">\n        {/* Show my list for Showing Checked list instead of all meme table using if */}\n        <div> Show your selected Meme List </div>\n        <div className=\"table-btn\">\n          <button\n            onClick={() => {\n              this.props.history.push(\"MyList\");\n            }}\n          >\n            Show My List\n          </button>\n        </div>\n        <br></br>\n        <form>\n          {/* Make my list Pushhes the mapped items in local storage */}\n          <p>\n            Use Make My List as a Submit button after Selecting your choices\n          </p>\n          <div className=\"table-btn\">\n            <button type=\"submit\" onClick={this.handleSubmit}>\n              Make My List\n            </button>\n          </div>\n          <div>\n            <input type=\"text\" onChange={this.handleSearch} />\n          </div>\n          <table className=\"response-table\">\n            <thead>\n              <tr>\n                <td>Checkbox</td>\n                <td>Name</td>\n                <td>Image</td>\n                <td>ID</td>\n              </tr>\n            </thead>\n            <tbody>\n              {/* mapping over the api response over index and show all,\n              e.target.checked - True / False  \n              i                - Index for which it is checked  */}\n              {this.state.showList.map((item, i) => (\n                <tr key={i}>\n                  <td>\n                    <input\n                      key={i}\n                      type=\"checkbox\"\n                      checked={item.isChecked}\n                      onChange={(e) => {\n                        this.handleCheck(item, e);\n                      }}\n                    ></input>\n                  </td>\n                  <td>{item.name}</td>\n                  <td>\n                    <img\n                      style={{ width: \"100px\", height: \"100px\" }}\n                      src={item.url}\n                      onClick={() => {\n                        this.setState({\n                          modal: !this.state.modal,\n                          currImg: item.url,\n                        });\n                      }}\n                    />\n                  </td>\n                  <td>{item.id}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n          <Modal\n            isOpen={this.state.modal}\n            toggle={() => {\n              this.setState({ modal: !this.state.modal });\n            }}\n          >\n            <ModalHeader>title</ModalHeader>\n            <ModalBody>\n              <GenMeme image={this.state.currImg} />\n            </ModalBody>\n            <ModalFooter>\n              <button\n                onClick={() => {\n                  this.setState({ modal: !this.state.modal });\n                }}\n              >\n                OK\n              </button>\n            </ModalFooter>\n          </Modal>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(MyTable);\n","/home/faique/Coalescense/react-memes-faique/src/GenMeme.js",["53","54","55"],"/home/faique/Coalescense/react-memes-faique/src/MyList.js",["56","57","58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":5,"column":3,"nodeType":"67","messageId":"68","endLine":5,"endColumn":9},{"ruleId":"65","severity":1,"message":"69","line":6,"column":3,"nodeType":"67","messageId":"68","endLine":6,"endColumn":11},{"ruleId":"65","severity":1,"message":"70","line":4,"column":8,"nodeType":"67","messageId":"68","endLine":4,"endColumn":15},{"ruleId":"65","severity":1,"message":"71","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":21,"column":7,"nodeType":"74","messageId":"75","endLine":21,"endColumn":19},{"ruleId":"76","severity":1,"message":"77","line":77,"column":21,"nodeType":"78","endLine":86,"endColumn":23},{"ruleId":"76","severity":1,"message":"77","line":116,"column":23,"nodeType":"78","endLine":125,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":140,"column":15,"nodeType":"78","endLine":144,"endColumn":16},{"ruleId":"65","severity":1,"message":"79","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":16},{"ruleId":"65","severity":1,"message":"80","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":15},{"ruleId":"65","severity":1,"message":"81","line":3,"column":17,"nodeType":"67","messageId":"68","endLine":3,"endColumn":23},{"ruleId":"65","severity":1,"message":"82","line":6,"column":10,"nodeType":"67","messageId":"68","endLine":6,"endColumn":23},{"ruleId":"65","severity":1,"message":"71","line":6,"column":25,"nodeType":"67","messageId":"68","endLine":6,"endColumn":29},{"ruleId":"65","severity":1,"message":"69","line":6,"column":31,"nodeType":"67","messageId":"68","endLine":6,"endColumn":39},{"ruleId":"76","severity":1,"message":"77","line":201,"column":21,"nodeType":"78","endLine":210,"endColumn":23},{"ruleId":"65","severity":1,"message":"83","line":4,"column":45,"nodeType":"67","messageId":"68","endLine":4,"endColumn":49},{"ruleId":"72","severity":1,"message":"84","line":20,"column":7,"nodeType":"74","messageId":"75","endLine":20,"endColumn":12},{"ruleId":"76","severity":1,"message":"77","line":140,"column":11,"nodeType":"78","endLine":140,"endColumn":72},{"ruleId":"65","severity":1,"message":"79","line":4,"column":10,"nodeType":"67","messageId":"68","endLine":4,"endColumn":16},{"ruleId":"65","severity":1,"message":"85","line":4,"column":18,"nodeType":"67","messageId":"68","endLine":4,"endColumn":23},{"ruleId":"65","severity":1,"message":"86","line":4,"column":25,"nodeType":"67","messageId":"68","endLine":4,"endColumn":36},{"ruleId":"65","severity":1,"message":"87","line":4,"column":38,"nodeType":"67","messageId":"68","endLine":4,"endColumn":47},{"ruleId":"65","severity":1,"message":"88","line":4,"column":49,"nodeType":"67","messageId":"68","endLine":4,"endColumn":60},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'MyTable' is defined but never used.","'Link' is defined but never used.","no-dupe-keys","Duplicate key 'memeResponse'.","ObjectExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","'Route' is defined but never used.","'Routes' is defined but never used.","'BrowserRouter' is defined but never used.","'Fade' is defined but never used.","Duplicate key 'color'.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","no-global-assign","no-unsafe-negation"]
{"ast":null,"code":"var _jsxFileName = \"/home/faique/Coalescense/react-memes-faique/src/GenMeme.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport html2canvas from \"html2canvas\";\nimport { Button, ButtonGroup, DropdownMenu, Fade } from \"reactstrap\";\nimport { Dropdown, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport \"./MakeImage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class GenMeme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadImage = (blob, fileName) => {\n      const fakeLink = window.document.createElement(\"a\");\n      fakeLink.style = \"display:none;\";\n      fakeLink.download = fileName;\n      fakeLink.href = blob;\n      document.body.appendChild(fakeLink);\n      fakeLink.click();\n      document.body.removeChild(fakeLink);\n      fakeLink.remove();\n    };\n\n    this.exportAsImage = async imageFileName => {\n      var data = document.getElementsByClassName(\"image-box\");\n      html2canvas(data).then(canvas => {\n        var image = canvas.toDataURL(\"image/png\", 1.0);\n        this.downloadImage(image, imageFileName);\n      });\n    };\n\n    this.state = {\n      size: 16,\n      dropdown: false,\n      color: \"white\",\n      memeResponse: [],\n      randomInt: 7,\n      topText: \"\",\n      bottomText: \"\",\n      color: \"white\"\n    };\n    this.exportAsImage = this.exportAsImage.bind(this);\n  }\n\n  render() {\n    const showRandImage = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          width: \"500px\",\n          height: \"500px\",\n          src: this.props.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-text-top\",\n          style: {\n            color: this.state.color,\n            fontSize: this.state.size\n          },\n          children: this.state.topText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-text-bottom\",\n          style: {\n            color: this.state.color,\n            fontSize: this.state.size\n          },\n          children: this.state.bottomText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Top Text\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => {\n              this.setState({\n                topText: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bottom Text\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => {\n              this.setState({\n                bottomText: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Red\"\n              });\n            },\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Blue\"\n              });\n            },\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Green\"\n              });\n            },\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          isOpen: this.state.dropdown,\n          toggle: () => {\n            this.setState({\n              dropdown: !this.state.dropdown\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n            caret: true,\n            children: \"Select Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 16\n                });\n              },\n              children: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 18\n                });\n              },\n              children: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 20\n                });\n              },\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 22\n                });\n              },\n              children: \"22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.exportAsImage(\"meme\"),\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), showRandImage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/faique/Coalescense/react-memes-faique/src/GenMeme.js"],"names":["React","Component","axios","html2canvas","Button","ButtonGroup","DropdownMenu","Fade","Dropdown","DropdownItem","DropdownToggle","GenMeme","constructor","props","downloadImage","blob","fileName","fakeLink","window","document","createElement","style","download","href","body","appendChild","click","removeChild","remove","exportAsImage","imageFileName","data","getElementsByClassName","then","canvas","image","toDataURL","state","size","dropdown","color","memeResponse","randomInt","topText","bottomText","bind","render","showRandImage","fontSize","event","setState","target","value","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,YAA9B,EAA4CC,IAA5C,QAAwD,YAAxD;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,QAAuD,YAAvD;AACA,OAAO,iBAAP;;AAEA,eAAe,MAAMC,OAAN,SAAsBV,SAAtB,CAAgC;AAC7CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,aAhBmB,GAgBH,CAACC,IAAD,EAAOC,QAAP,KAAoB;AAClC,YAAMC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBC,aAAhB,CAA8B,GAA9B,CAAjB;AACAH,MAAAA,QAAQ,CAACI,KAAT,GAAiB,eAAjB;AACAJ,MAAAA,QAAQ,CAACK,QAAT,GAAoBN,QAApB;AAEAC,MAAAA,QAAQ,CAACM,IAAT,GAAgBR,IAAhB;AAEAI,MAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BR,QAA1B;AACAA,MAAAA,QAAQ,CAACS,KAAT;AACAP,MAAAA,QAAQ,CAACK,IAAT,CAAcG,WAAd,CAA0BV,QAA1B;AAEAA,MAAAA,QAAQ,CAACW,MAAT;AACD,KA5BkB;;AAAA,SA6BnBC,aA7BmB,GA6BH,MAAOC,aAAP,IAAyB;AACvC,UAAIC,IAAI,GAAGZ,QAAQ,CAACa,sBAAT,CAAgC,WAAhC,CAAX;AACA7B,MAAAA,WAAW,CAAC4B,IAAD,CAAX,CAAkBE,IAAlB,CAAwBC,MAAD,IAAY;AACjC,YAAIC,KAAK,GAAGD,MAAM,CAACE,SAAP,CAAiB,WAAjB,EAA8B,GAA9B,CAAZ;AACA,aAAKtB,aAAL,CAAmBqB,KAAnB,EAA0BL,aAA1B;AACD,OAHD;AAID,KAnCkB;;AAGjB,SAAKO,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE,OAHI;AAIXC,MAAAA,YAAY,EAAE,EAJH;AAKXC,MAAAA,SAAS,EAAE,CALA;AAMXC,MAAAA,OAAO,EAAE,EANE;AAOXC,MAAAA,UAAU,EAAE,EAPD;AAQXJ,MAAAA,KAAK,EAAE;AARI,KAAb;AAUA,SAAKX,aAAL,GAAqB,KAAKA,aAAL,CAAmBgB,IAAnB,CAAwB,IAAxB,CAArB;AACD;;AAuBDC,EAAAA,MAAM,GAAG;AACP,UAAMC,aAAa,GAAG,MAAM;AAC1B,0BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,KAAK,EAAE,OAAZ;AAAqB,UAAA,MAAM,EAAE,OAA7B;AAAsC,UAAA,GAAG,EAAE,KAAKlC,KAAL,CAAWsB;AAAtD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,SAAS,EAAC,gBADZ;AAEE,UAAA,KAAK,EAAE;AAAEK,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAApB;AAA2BQ,YAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC;AAAhD,WAFT;AAAA,oBAIG,KAAKD,KAAL,CAAWM;AAJd;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAApB;AAA2BQ,YAAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC;AAAhD,WAFT;AAAA,oBAIG,KAAKD,KAAL,CAAWO;AAJd;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KAlBD;;AAmBA,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAA,8CAEE;AACE,YAAA,QAAQ,EAAGK,KAAD,IAAW;AACnB,mBAAKC,QAAL,CAAc;AAAEP,gBAAAA,OAAO,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAxB,eAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eASE;AAAA,iDAEE;AACE,YAAA,QAAQ,EAAGH,KAAD,IAAW;AACnB,mBAAKC,QAAL,CAAc;AAAEN,gBAAAA,UAAU,EAAEK,KAAK,CAACE,MAAN,CAAaC;AAA3B,eAAd;AACD;AAHH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF,eAiBE,QAAC,WAAD;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,OAAO,EAAGC,CAAD,IAAO;AACd,mBAAKH,QAAL,CAAc;AAAEV,gBAAAA,KAAK,EAAE;AAAT,eAAd;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE,QAAC,MAAD;AACE,YAAA,OAAO,EAAGa,CAAD,IAAO;AACd,mBAAKH,QAAL,CAAc;AAAEV,gBAAAA,KAAK,EAAE;AAAT,eAAd;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAeE,QAAC,MAAD;AACE,YAAA,OAAO,EAAGa,CAAD,IAAO;AACd,mBAAKH,QAAL,CAAc;AAAEV,gBAAAA,KAAK,EAAE;AAAT,eAAd;AACD,aAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBF,eAwCE,QAAC,QAAD;AACE,UAAA,MAAM,EAAE,KAAKH,KAAL,CAAWE,QADrB;AAEE,UAAA,MAAM,EAAE,MAAM;AACZ,iBAAKW,QAAL,CAAc;AAAEX,cAAAA,QAAQ,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAAxB,aAAd;AACD,WAJH;AAAA,kCAME,QAAC,cAAD;AAAgB,YAAA,KAAK,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,YAAD;AAAA,oCACE,QAAC,YAAD;AACE,cAAA,OAAO,EAAGc,CAAD,IAAO;AACd,qBAAKH,QAAL,CAAc;AAAEZ,kBAAAA,IAAI,EAAE;AAAR,iBAAd;AACD,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAQE,QAAC,YAAD;AACE,cAAA,OAAO,EAAGe,CAAD,IAAO;AACd,qBAAKH,QAAL,CAAc;AAAEZ,kBAAAA,IAAI,EAAE;AAAR,iBAAd;AACD,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,eAeE,QAAC,YAAD;AACE,cAAA,OAAO,EAAGe,CAAD,IAAO;AACd,qBAAKH,QAAL,CAAc;AAAEZ,kBAAAA,IAAI,EAAE;AAAR,iBAAd;AACD,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfF,eAsBE,QAAC,YAAD;AACE,cAAA,OAAO,EAAGe,CAAD,IAAO;AACd,qBAAKH,QAAL,CAAc;AAAEZ,kBAAAA,IAAI,EAAE;AAAR,iBAAd;AACD,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxCF,eA8EE;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAKT,aAAL,CAAmB,MAAnB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9EF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAkFGkB,aAAa,EAlFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsFD;;AAhJ4C","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport html2canvas from \"html2canvas\";\nimport { Button, ButtonGroup, DropdownMenu, Fade } from \"reactstrap\";\nimport { Dropdown, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport \"./MakeImage.css\";\n\nexport default class GenMeme extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: 16,\n      dropdown: false,\n      color: \"white\",\n      memeResponse: [],\n      randomInt: 7,\n      topText: \"\",\n      bottomText: \"\",\n      color: \"white\",\n    };\n    this.exportAsImage = this.exportAsImage.bind(this);\n  }\n\n  downloadImage = (blob, fileName) => {\n    const fakeLink = window.document.createElement(\"a\");\n    fakeLink.style = \"display:none;\";\n    fakeLink.download = fileName;\n\n    fakeLink.href = blob;\n\n    document.body.appendChild(fakeLink);\n    fakeLink.click();\n    document.body.removeChild(fakeLink);\n\n    fakeLink.remove();\n  };\n  exportAsImage = async (imageFileName) => {\n    var data = document.getElementsByClassName(\"image-box\");\n    html2canvas(data).then((canvas) => {\n      var image = canvas.toDataURL(\"image/png\", 1.0);\n      this.downloadImage(image, imageFileName);\n    });\n  };\n\n  render() {\n    const showRandImage = () => {\n      return (\n        <div className=\"image-box\">\n          <img width={\"500px\"} height={\"500px\"} src={this.props.image}></img>\n          <div\n            className=\"image-text-top\"\n            style={{ color: this.state.color, fontSize: this.state.size }}\n          >\n            {this.state.topText}\n          </div>\n          <div\n            className=\"image-text-bottom\"\n            style={{ color: this.state.color, fontSize: this.state.size }}\n          >\n            {this.state.bottomText}\n          </div>\n        </div>\n      );\n    };\n    return (\n      <div className=\"page-box\">\n        <div className=\"features-box\">\n          <label>\n            Top Text\n            <input\n              onChange={(event) => {\n                this.setState({ topText: event.target.value });\n              }}\n            ></input>\n          </label>\n          <label>\n            Bottom Text\n            <input\n              onChange={(event) => {\n                this.setState({ bottomText: event.target.value });\n              }}\n            ></input>\n          </label>\n          <ButtonGroup>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Red\" });\n              }}\n            >\n              Red\n            </Button>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Blue\" });\n              }}\n            >\n              Blue\n            </Button>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Green\" });\n              }}\n            >\n              Green\n            </Button>\n          </ButtonGroup>\n          <Dropdown\n            isOpen={this.state.dropdown}\n            toggle={() => {\n              this.setState({ dropdown: !this.state.dropdown });\n            }}\n          >\n            <DropdownToggle caret>Select Size</DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 16 });\n                }}\n              >\n                16\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 18 });\n                }}\n              >\n                18\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 20 });\n                }}\n              >\n                20\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 22 });\n                }}\n              >\n                22\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <button onClick={() => this.exportAsImage(\"meme\")}>Export</button>\n        </div>\n\n        {showRandImage()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/faique/Coalescense/react-memes-faique/src/MakeImage.js\";\nimport React, { Component } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport axios from \"axios\";\nimport { Button, ButtonGroup, DropdownMenu, Fade } from \"reactstrap\";\nimport { Dropdown, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport \"./MakeImage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class MakeImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.exportAsImage = async imageFileName => {\n      var data = document.getElementsByClassName(\"image-box\");\n      html2canvas(data).then(canvas => {\n        var image = canvas.toDataURL(\"image/png\", 1.0);\n        saveAs(image, imageFileName);\n      });\n    };\n\n    this.state = {\n      size: 16,\n      dropdown: false,\n      color: \"white\",\n      memeResponse: [],\n      randomInt: null,\n      topText: \"\",\n      bottomText: \"\",\n      color: \"white\"\n    };\n    const url = \"https://api.imgflip.com/get_memes\";\n    axios.get(url).then(response => {\n      //console.log('hi', response.data.data)\n      this.setState({\n        memeResponse: response.data.data.memes\n      });\n    });\n  }\n\n  render() {\n    const showRandImage = () => {\n      if (this.state.randomInt !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            width: \"500px\",\n            height: \"500px\",\n            src: this.state.memeResponse[this.state.randomInt].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-text-top\",\n            style: {\n              color: this.state.color,\n              fontSize: this.state.size\n            },\n            children: this.state.topText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"image-text-bottom\",\n            style: {\n              color: this.state.color,\n              fontSize: this.state.size\n            },\n            children: this.state.bottomText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 16\n        }, this);\n      }\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Your meme here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"8px\",\n            marginBottom: \"8px\",\n            marginRight: \"8px\"\n          },\n          children: \"Step 1: Generate Random Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"random-gen-btn\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => {\n            this.setState({\n              randomInt: Math.floor(Math.random() * 101)\n            });\n          },\n          children: \"Generate Random\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Step 2 : Modify Your Meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"features-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Top Text\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => {\n              this.setState({\n                topText: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Bottom Text\", /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: event => {\n              this.setState({\n                bottomText: event.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Red\"\n              });\n            },\n            children: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Blue\"\n              });\n            },\n            children: \"Blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: e => {\n              this.setState({\n                color: \"Green\"\n              });\n            },\n            children: \"Green\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          isOpen: this.state.dropdown,\n          toggle: () => {\n            this.setState({\n              dropdown: !this.state.dropdown\n            });\n          },\n          children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n            caret: true,\n            children: \"Select Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n            children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 16\n                });\n              },\n              children: \"16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 18\n                });\n              },\n              children: \"18\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 20\n                });\n              },\n              children: \"20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n              onClick: e => {\n                this.setState({\n                  size: 22\n                });\n              },\n              children: \"22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportAsImage,\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), showRandImage()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/faique/Coalescense/react-memes-faique/src/MakeImage.js"],"names":["React","Component","html2canvas","axios","Button","ButtonGroup","DropdownMenu","Fade","Dropdown","DropdownItem","DropdownToggle","MakeImage","constructor","props","exportAsImage","imageFileName","data","document","getElementsByClassName","then","canvas","image","toDataURL","saveAs","state","size","dropdown","color","memeResponse","randomInt","topText","bottomText","url","get","response","setState","memes","render","showRandImage","fontSize","display","justifyContent","marginTop","marginBottom","marginRight","e","Math","floor","random","event","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport html2canvas from \"html2canvas\";\nimport axios from \"axios\";\nimport { Button, ButtonGroup, DropdownMenu, Fade } from \"reactstrap\";\nimport { Dropdown, DropdownItem, DropdownToggle } from \"reactstrap\";\nimport \"./MakeImage.css\";\n\nexport default class MakeImage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      size: 16,\n      dropdown: false,\n      color: \"white\",\n      memeResponse: [],\n      randomInt: null,\n      topText: \"\",\n      bottomText: \"\",\n      color: \"white\",\n    };\n\n    const url = \"https://api.imgflip.com/get_memes\";\n    axios.get(url).then((response) => {\n      //console.log('hi', response.data.data)\n      this.setState({ memeResponse: response.data.data.memes });\n    });\n  }\n  exportAsImage = async (imageFileName) => {\n    var data = document.getElementsByClassName(\"image-box\");\n    html2canvas(data).then((canvas) => {\n      var image = canvas.toDataURL(\"image/png\", 1.0);\n      saveAs(image, imageFileName);\n    });\n  };\n\n  render() {\n    const showRandImage = () => {\n      if (this.state.randomInt !== null) {\n        return (\n          <div className=\"image-box\">\n            <img\n              width={\"500px\"}\n              height={\"500px\"}\n              src={this.state.memeResponse[this.state.randomInt].url}\n            ></img>\n            <div\n              className=\"image-text-top\"\n              style={{ color: this.state.color, fontSize: this.state.size }}\n            >\n              {this.state.topText}\n            </div>\n            <div\n              className=\"image-text-bottom\"\n              style={{ color: this.state.color, fontSize: this.state.size }}\n            >\n              {this.state.bottomText}\n            </div>\n          </div>\n        );\n      } else {\n        return <div></div>;\n      }\n    };\n    return (\n      <div className=\"page-box\">\n        <h1>Create Your meme here</h1>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <p\n            style={{\n              marginTop: \"8px\",\n              marginBottom: \"8px\",\n              marginRight: \"8px\",\n            }}\n          >\n            Step 1: Generate Random Meme\n          </p>\n        </div>\n\n        <div className=\"random-gen-btn\">\n          <Button\n            onClick={(e) => {\n              this.setState({\n                randomInt: Math.floor(Math.random() * 101),\n              });\n            }}\n          >\n            Generate Random\n          </Button>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <p>Step 2 : Modify Your Meme</p>\n        </div>\n\n        <div className=\"features-box\">\n          <label>\n            Top Text\n            <input\n              onChange={(event) => {\n                this.setState({ topText: event.target.value });\n              }}\n            ></input>\n          </label>\n          <label>\n            Bottom Text\n            <input\n              onChange={(event) => {\n                this.setState({ bottomText: event.target.value });\n              }}\n            ></input>\n          </label>\n          <ButtonGroup>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Red\" });\n              }}\n            >\n              Red\n            </Button>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Blue\" });\n              }}\n            >\n              Blue\n            </Button>\n            <Button\n              onClick={(e) => {\n                this.setState({ color: \"Green\" });\n              }}\n            >\n              Green\n            </Button>\n          </ButtonGroup>\n          <Dropdown\n            isOpen={this.state.dropdown}\n            toggle={() => {\n              this.setState({ dropdown: !this.state.dropdown });\n            }}\n          >\n            <DropdownToggle caret>Select Size</DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 16 });\n                }}\n              >\n                16\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 18 });\n                }}\n              >\n                18\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 20 });\n                }}\n              >\n                20\n              </DropdownItem>\n              <DropdownItem\n                onClick={(e) => {\n                  this.setState({ size: 22 });\n                }}\n              >\n                22\n              </DropdownItem>\n            </DropdownMenu>\n          </Dropdown>\n          <button onClick={exportAsImage}>Export</button>\n        </div>\n\n        {showRandImage()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}